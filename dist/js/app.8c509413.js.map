{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4a62","webpack:///./src/components/CityMap.vue?ffb8","webpack:///./src/App.vue?005d","webpack:///./src/components/CityMap.vue?a828","webpack:///./src/utils/effect.js","webpack:///./src/utils/shader.js","webpack:///./src/components/effect/radar.js","webpack:///./src/components/effect/wall.js","webpack:///./src/components/city.js","webpack:///src/components/CityMap.vue","webpack:///./src/components/CityMap.vue?73eb","webpack:///./src/components/CityMap.vue","webpack:///./src/components/staticLayout.vue?e7ed","webpack:///src/components/staticLayout.vue","webpack:///./src/components/staticLayout.vue?3a6f","webpack:///./src/components/staticLayout.vue","webpack:///src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/staticLayout.vue?3958"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","staticRenderFns","_m","surroundLineGeometry","THREE","geometry","base","surroundLine","vertexShader","fragmentShader","frag_basic","Shader","opts","radius","color","speed","opacity","angle","Math","PI","position","x","y","z","rotation","width","material","uniforms","u_radius","u_speed","u_opacity","u_width","u_color","time","transparent","depthWrite","side","mesh","set","copy","option","height","renderOrder","translate","u_height","depthTest","radarData","wallData","City","scene","center","dt","isStart","StartTime","group","effectGroup","add","surroundLineMaterial","traverse","child","isMesh","computeBoundingBox","computeBoundingSphere","init","url","Promise","resolve","reject","fbxLoader","load","obj","e","setTimeout","forEach","Radar","Wall","Effects","worldPosition","getWorldPosition","boundingBox","max","min","size","createSurroundLineMaterial","line","scale","uColor","uActive","uOpacity","uMax","uMin","uRange","uSpeed","uStartTime","mounted","animate","group2","shapeScaleSize","faceColor","sideColor","shapeGeometryObj","cityCenter","methods","onMouseClick","mouse","raycaster","setFromCamera","onDBlclick","isDown","cObject","rotateZ","requestAnimationFrame","TWEEN","update","city","delta","points","mixer","controls","renderer","render","camera","calculationCoordinate","addCircleAlarm","arcShapeDrn01","moveTo","txtu","wrapS","wrapT","offset","repeat","nMesh","rotateX","createCone","component","components","Vue","config","productionTip","h","App","$mount"],"mappings":"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","file":"js/app.8c509413.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/smart-taiyuan/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CityMap.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('city-map'),_c('static-layout',{staticClass:\"layout\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"three\",attrs:{\"id\":\"three\"}})])}]\n\nexport { render, staticRenderFns }","import * as THREE from 'three'\nexport default {\n    // 获取到包围的线条\n    surroundLineGeometry(object) {\n        return new THREE.EdgesGeometry(object.geometry);\n    }\n}","const base = `\nprecision mediump float;\n\nfloat distanceTo(vec2 src, vec2 dst) {\n    float dx = src.x - dst.x;\n    float dy = src.y - dst.y;\n    float dv = dx * dx + dy * dy;\n    return sqrt(dv);\n} \n\nfloat lerp(float x, float y, float t) {\n    return (1.0 - t) * x + t * y;\n}\n\n#define PI 3.14159265359\n#define PI2 6.28318530718\n\n`\nconst surroundLine = {\n    // 顶点着色器\n    vertexShader: `\n    #define PI 3.14159265359\n\n    uniform mediump float uStartTime;\n    uniform mediump float time;\n    uniform mediump float uRange;\n    uniform mediump float uSpeed;\n\n    uniform vec3 uColor;\n    uniform vec3 uActive;\n    uniform vec3 uMin;\n    uniform vec3 uMax;\n    uniform vec2 center;\n\n    varying vec3 vColor;\n\n    float lerp(float x, float y, float t) {\n        return (1.0 - t) * x + t * y;\n    }\n    void main() { \n        if (uStartTime >= 0.99) {\n            float iTime = mod(time * uSpeed - uStartTime, 1.0);\n            float rangeY = lerp(uMin.y, uMax.y, iTime);\n            if (rangeY < position.y && rangeY > position.y - uRange) {\n                float index = 1.0 - sin((position.y - rangeY) / uRange * PI);\n                float r = lerp(uActive.r, uColor.r, index);\n                float g = lerp(uActive.g, uColor.g, index);\n                float b = lerp(uActive.b, uColor.b, index);\n\n                vColor = vec3(r, g, b);\n            } else {\n                vColor = uColor;\n            }\n        }\n        vec3 vPosition = vec3(position.x, position.y, position.z * uStartTime);\n        // vec3 vPosition = vec3((position.x - center.x) * 50000.0, -( position.y - center.y ) * 50000.0, position.z * uStartTime);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(vPosition, 1.0);\n    } \n    `,\n    // 片元着色器\n    fragmentShader: ` \n    ${base} \n    uniform float time;\n    uniform float uOpacity;\n    uniform float uStartTime;\n\n    varying vec3 vColor; \n\n    void main() {\n\n        gl_FragColor = vec4(vColor, uOpacity * uStartTime);\n    }\n    `\n}\n\nconst fragmentShader = `#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\n    float distanceTo(vec2 src, vec2 dst) {\n        float dx = src.x - dst.x;\n        float dy = src.y - dst.y;\n        float dv = dx * dx + dy * dy;\n        return sqrt(dv);\n    }\n\n    float lerp(float x, float y, float t) {\n        return (1.0 - t) * x + t * y;\n    }\n\n    vec3 getGradientColor(vec3 color1, vec3 color2, float index) {\n        float r = lerp(color1.r, color2.r, index);\n        float g = lerp(color1.g, color2.g, index);\n        float b = lerp(color1.b, color2.b, index);\n        return vec3(r, g, b);\n    }\n\n    varying vec4 vPositionMatrix;\n    varying vec3 vPosition;\n\n    uniform float time;\n    // 扩散参数\n    uniform float uRadius;\n    uniform float uOpacity;\n    // 初始动画参数\n    uniform float uStartTime; \n\n    uniform vec3 uMin;\n    uniform vec3 uMax;\n    uniform vec3 uSize;\n    uniform vec3 uFlow;\n    uniform vec3 uColor;\n    uniform vec3 uCenter;\n    uniform vec3 uSwitch;\n    uniform vec3 uTopColor;\n    uniform vec3 uFlowColor;\n    uniform vec3 uDiffusion; \n    uniform vec3 uDiffusionCenter;\n\n    void main() {\n        \n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t\n    vec3 distColor = outgoingLight;\n    float dstOpacity = diffuseColor.a;\n    \n    float indexMix = vPosition.z / (uSize.z * 0.6);\n    distColor = mix(distColor, uTopColor, indexMix);\n    \n    // 开启扩散波\n    vec2 position2D = vec2(vPosition.x, vPosition.y);\n    if (uDiffusion.x > 0.5) {\n        // 扩散速度\n        float dTime = mod(time * uDiffusion.z, uRadius * 0.5);\n        // 当前的离中心点距离\n        float uLen = distanceTo(position2D, vec2(uCenter.x, uCenter.z));\n\n        // 扩散范围\n        if (uLen < dTime && uLen > dTime - uDiffusion.y) {\n            // 颜色渐变\n            float dIndex = sin((dTime - uLen) / uDiffusion.y * PI);\n            distColor = mix(uColor, distColor, 1.0 - dIndex);\n        }\n    }\n\n    // 流动效果\n    if (uFlow.x > 0.5) {\n        // 扩散速度\n        float dTime = mod(time * uFlow.z, uSize.z); \n        // 流动范围\n        float topY = vPosition.z + uFlow.y;\n        if (dTime > vPosition.z && dTime < topY) {\n            // 颜色渐变 \n            float dIndex = sin((topY - dTime) / uFlow.y * PI);\n\n            distColor = mix(distColor, uFlowColor,  dIndex); \n        }\n    }\n  \n\n    gl_FragColor = vec4(distColor, dstOpacity * uStartTime);\n        \n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}`\n\nconst vertexShader = `#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\n    varying vec4 vPositionMatrix;\n    varying vec3 vPosition;\n    uniform float uStartTime;\n    void main() {\n            vPositionMatrix = projectionMatrix * vec4(position, 1.0);\n            vPosition = position;\n            \n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t\n    vec3 transformed = vec3(position.x, position.y, position.z * uStartTime);\n            \n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}`\nexport default {\n    base,\n    surroundLine,\n    fragmentShader,\n    vertexShader\n}","import * as THREE from 'three';\n\nconst frag_basic = `\nprecision mediump float;\n \nfloat atan2(float y, float x){\n  float t0, t1, t2, t3, t4;\n  t3 = abs(x);\n  t1 = abs(y);\n  t0 = max(t3, t1);\n  t1 = min(t3, t1);\n  t3 = float(1) / t0;\n  t3 = t1 * t3;\n  t4 = t3 * t3;\n  t0 = -float(0.013480470);\n  t0 = t0 * t4 + float(0.057477314);\n  t0 = t0 * t4 - float(0.121239071);\n  t0 = t0 * t4 + float(0.195635925);\n  t0 = t0 * t4 - float(0.332994597);\n  t0 = t0 * t4 + float(0.999995630);\n  t3 = t0 * t3;\n  t3 = (abs(y) > abs(x)) ? float(1.570796327) - t3 : t3;\n  t3 = (x < 0.0) ?  float(3.141592654) - t3 : t3;\n  t3 = (y < 0.0) ? -t3 : t3;\n  return t3;\n}\n// 计算距离\nfloat distanceTo(vec2 src, vec2 dst) {\n\tfloat dx = src.x - dst.x;\n\tfloat dy = src.y - dst.y;\n\tfloat dv = dx * dx + dy * dy;\n\treturn sqrt(dv);\n}\n\n#define PI 3.14159265359\n#define PI2 6.28318530718\n\nuniform vec3 u_color;\nuniform float time;\nuniform float u_opacity;\nuniform float u_radius;\nuniform float u_width;\nuniform float u_speed;\n\nvarying vec2 v_position;\n\n    `\nconst Shader = {\n    vertexShader: `\n    varying vec2 v_position;\n    \n    void main() {\n        v_position = vec2(position.x, position.y);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }`,\n    fragmentShader: `\n    ${frag_basic} \n    void main() {\n        float d_time = u_speed * time;\n\n        float angle = atan2(v_position.x, v_position.y) + PI;\n        \n        float angleT = mod(angle + d_time, PI2);\n\n        float width = u_width;\n    \n        float d_opacity = 0.0;\n\n        // 当前位置离中心位置\n        float length = distanceTo(vec2(0.0, 0.0), v_position);\n        \n        float bw = 5.0;\n        if (length < u_radius && length > u_radius - bw) {\n            float o = (length - (u_radius - bw)) / bw;\n            d_opacity = sin(o * PI); \n        }\n\n        if (length < u_radius - bw / 1.1) {\n            d_opacity = 1.0 - angleT / PI * (PI / width);\n        } \n\n        if (length > u_radius) { d_opacity = 0.0; }\n \n        gl_FragColor = vec4(u_color, d_opacity * u_opacity);\n    }`\n}\nexport default function (opts) {\n    const {\n        radius = 50,\n            color = \"#fff\",\n            speed = 1,\n            opacity = 1,\n            angle = Math.PI,\n            position = {\n                x: 0,\n                y: 0,\n                z: 0\n            },\n            rotation = {\n                x: -Math.PI / 2,\n                y: 0,\n                z: 0\n            }\n    } = opts;\n\n    const width = radius * 2;\n\n    const geometry = new THREE.PlaneBufferGeometry(width, width, 1, 1);\n\n    const material = new THREE.ShaderMaterial({\n        uniforms: {\n            u_radius: {\n                value: radius\n            },\n            u_speed: {\n                value: speed\n            },\n            u_opacity: {\n                value: opacity\n            },\n            u_width: {\n                value: angle\n            },\n            u_color: {\n                value: new THREE.Color(color)\n            },\n            time: {\n                value: 0\n            }\n        },\n        transparent: true,\n        depthWrite: false,\n        side: THREE.DoubleSide,\n        vertexShader: Shader.vertexShader,\n        fragmentShader: Shader.fragmentShader\n    })\n\n    const mesh = new THREE.Mesh(geometry, material);\n\n    mesh.rotation.set(rotation.x, rotation.y, rotation.z);\n    mesh.position.copy(position);\n\n    return mesh\n}","import * as THREE from 'three';\n\nconst vertexShader = `\nuniform vec3 u_color;\n\nuniform float time;\nuniform float u_height;\n \nvarying float v_opacity;\n\nvoid main() {\n\n    vec3 vPosition = position * mod(time, 1.0);\n\n    v_opacity = mix(1.0, 0.0, position.y / u_height);\n \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(vPosition, 1.0);\n}\n`;\nconst fragmentShader = ` \nuniform vec3 u_color;\nuniform float u_opacity;\n \nvarying float v_opacity;\n\nvoid main() { \n    gl_FragColor = vec4(u_color, v_opacity * u_opacity);\n}\n`;\n\n\nexport default function (option = {}) {\n    const {\n        radius,\n        height,\n        opacity,\n        color,\n        speed,\n        renderOrder\n    } = option;\n    const geometry = new THREE.CylinderGeometry(radius, radius, height, 32, 1, true);\n    geometry.translate(0, height / 2, 0);\n    const material = new THREE.ShaderMaterial({\n        uniforms: {\n            u_height: {\n                value: height\n            },\n            u_speed: {\n                value: speed || 1\n            },\n            u_opacity: {\n                value: opacity\n            },\n            u_color: {\n                value: new THREE.Color(color)\n            },\n            time: {\n                value: 0\n            }\n        },\n        transparent: true,\n        depthWrite: false,\n        depthTest: false,\n        side: THREE.DoubleSide,\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.renderOrder = renderOrder || 1;\n    return mesh;\n}","import * as THREE from 'three'\nimport Effects from '../utils/effect'\nimport Shader from '../utils/shader'\nimport {\n    Radar,\n    Wall,\n} from './effect/index'\n\nconst radarData = [\n{\n    position: {\n        x: 666,\n        y: 25,\n        z: -202\n    },\n    radius: 220,\n    color: '#efad35',\n    opacity: 0.6,\n    speed: 1\n}];\nconst wallData = [{\n    position: {\n        x: -150,\n        y: 15,\n        z: 100\n    },\n    speed: 0.00001,\n    color: '#ff0000',\n    opacity: 0.6,\n    radius: 200,\n    height: 120,\n    renderOrder: 5\n}]\n\nclass City {\n    constructor( scene, center ) {\n        // this.fbxLoader = new FBXLoader();\n        this.group = new THREE.Group();\n\n        this.effectGroup = new THREE.Group();\n\n        this.group.add(this.effectGroup);\n\n        this.surroundLineMaterial = null;\n        this.time = {\n            value: 0\n        };\n        this.StartTime = {\n            value: 0\n        };\n        this.isStart = false; // 是否启动\n        this.group.add(scene);\n        scene.traverse((child) => {\n            // 城市效果\n            if(child.isMesh){\n                // 建筑\n                child.geometry.computeBoundingBox();\n                child.geometry.computeBoundingSphere();\n                // 添加包围线条效\n                this.surroundLine(child, center);\n            }\n        })\n\n        this.init();\n    }\n\n    /**\n     *  Loader Model\n     */\n    loadFbx(url) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.fbxLoader.load(url, (obj) => {\n                    resolve(obj);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        });\n    }\n\n    init() {\n        setTimeout(() => {\n            this.isStart = true;\n            // 加载扫描效果\n            radarData.forEach((data) => {\n                const mesh = Radar(data);\n                mesh.material.uniforms.time = this.time;\n                this.effectGroup.add(mesh);\n            });\n            // 光墙\n            wallData.forEach((data) => {\n                const mesh = Wall(data);\n                mesh.material.uniforms.time = this.time;\n                this.effectGroup.add(mesh);\n            });\n        }, 1000);\n    }\n\n    // Line\n    /**\n     * 获取包围线条效果\n     */\n    surroundLine(object,center) {\n        // 获取线条geometry\n        const geometry = Effects.surroundLineGeometry(object);\n        // 获取物体的世界坐标 旋转等\n        const worldPosition = new THREE.Vector3();\n        object.getWorldPosition(worldPosition);\n\n        // 传递给shader重要参数\n        const {\n            max,\n            min\n        } = object.geometry.boundingBox;\n\n        const size = new THREE.Vector3(\n            max.x - min.x,\n            max.y - min.y,\n            max.z - min.z\n        );\n\n        // this.effectGroup.add();\n        const material = this.createSurroundLineMaterial({\n            max,\n            min,\n            size\n        }, center);\n\n        const line = new THREE.LineSegments(geometry, material);\n\n        line.name = 'surroundLine';\n\n        line.scale.copy(object.scale);\n        line.rotation.copy(object.rotation);\n        line.position.copy(worldPosition);\n        this.effectGroup.add(line);\n    }\n\n    /**\n     * 创建包围线条材质\n     */\n    createSurroundLineMaterial({\n        max,\n        min,\n        // size\n    }, center) {\n        if (this.surroundLineMaterial) return this.surroundLineMaterial;\n\n        this.surroundLineMaterial = new THREE.ShaderMaterial({\n            transparent: true,\n            uniforms: {\n                uColor: {\n                    value: new THREE.Color(\"#cfcfcf\")\n                },\n                uActive: {\n                    value: new THREE.Color(\"#b3e5fc\")\n                },\n                time: this.time,\n                uOpacity: {\n                    value: 0.6\n                },\n                uMax: {\n                    value: max,\n                },\n                uMin: {\n                    value: min,\n                },\n                uRange: {\n                    value: 200\n                },\n                uSpeed: {\n                    value: 0.2\n                },\n                uStartTime: this.StartTime,\n                center: {\n                    value: center\n                }\n            },\n            vertexShader: Shader.surroundLine.vertexShader,\n            fragmentShader: Shader.surroundLine.fragmentShader\n        });\n\n        return this.surroundLineMaterial;\n    }\n\n    animate = (dt) => {\n        if (dt > 1) return false;\n        this.time.value += dt;\n        // 启动\n        if (this.isStart) {\n            this.StartTime.value += dt * 0.5;\n            if (this.StartTime.value >= 1) {\n                this.StartTime.value = 1;\n                // this.isStart = false;\n            }\n        }\n    }\n}\n\nexport default City;","<template>\r\n  <div id=\"app\">\r\n    <div id=\"three\" class=\"three\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { mergeBufferGeometries } from \"three/examples/jsm/utils/BufferGeometryUtils\";\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport CityClass from \"./city\";\r\nimport building from \"../assets/building.json\";\r\nimport road from \"../assets/road.json\";\r\nimport rivers from \"../assets/rivers.json\"\r\nimport { Water } from 'three/examples/jsm/objects/Water2'\r\nimport { MeshLine, MeshLineMaterial } from 'meshline';\r\n// import negx from '@/assets/sky/negx.jpg'\r\n// import negy from '@/assets/sky/negy.jpg'\r\n// import negz from '@/assets/sky/negz.jpg'\r\n// import posx from '@/assets/sky/pocx.jpg'\r\n// import posy from '@/assets/sky/pocy.jpg'\r\n// import posz from '@/assets/sky/pocz.jpg'\r\n\r\n// import CreatRisePoint from './effect/CreatePoint'\r\nconst TWEEN = require('@tweenjs/tween.js')\r\nconst raycaster = new THREE.Raycaster()\r\nexport default {\r\n  name: \"App\",\r\n  mounted() {\r\n    this.init();\r\n    this.animate();\r\n  },\r\n  data() {\r\n    return {\r\n      group: [],\r\n      group2: [],\r\n      // 地图缩放等级\r\n      shapeScaleSize: 1,\r\n      faceColor: \"#F8F8FF\",\r\n      sideColor: \"#D3D3D3\",\r\n      shapeGeometryObj: {},\r\n      cityCenter: {x:112.5454,y:37.851}\r\n    };\r\n  },\r\n  methods: {\r\n    async init() {\r\n      this.isDown = false;\r\n      this.clock = new THREE.Clock(); // 用于更新轨道控制器\r\n      let container = this.container = document.getElementById(\"three\");\r\n\r\n      const fov = 75;\r\n      const aspect = container.clientWidth / container.clientHeight;\r\n      const near = 1;\r\n      const far = 100000;\r\n      this.camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n      this.camera.position.set(1000, 1000, 1000);\r\n\r\n      this.scene = new THREE.Scene();\r\n      // this.scene.background = new THREE.TextureLoader().load('/smart-taiyuan/static/bg.jpg')\r\n      this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n      this.renderer.setSize(container.clientWidth, container.clientHeight);\r\n      this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n      this.controls.minDistance = 200;\r\n      this.controls.maxDistance = 5000;\r\n      this.controls.enablePan = true;\r\n      this.controls.enableDamping = true;\r\n      this.controls.dampingFactor = 0.05;\r\n\r\n      const imgs = [ \r\n        './static/sky/you.png',\r\n        './static/sky/zuo.png',\r\n        './static/sky/shang.png',\r\n        './static/sky/xia.png',\r\n        './static/sky/qian.png',\r\n        './static/sky/hou.png',\r\n        \r\n      ]\r\n      this.scene.background = new THREE.CubeTextureLoader().load(imgs)\r\n      console.log(this.scene.background);\r\n      // this.controls.addEventListener('change',()=>{\r\n      //   console.log(this.camera.zoom);\r\n      // })\r\n      // this.controls.autoRotate = true\r\n      const group = new THREE.Group();\r\n      // const outside =  new THREE.TextureLoader().load('./static/outside.jpg')\r\n      // outside.wrapS = outside.wrapT = THREE.RepeatWrapping\r\n      \r\n      const geometrys = [];\r\n      let maxH = 1\r\n      // 遍历建筑的GeoJson文件\r\n      building.features.forEach((item) => {\r\n        if (item.geometry && item?.geometry.type === \"Polygon\") {\r\n          // 拉高的参数\r\n          let h = item.properties.Floor * 4\r\n          if( maxH < h ){\r\n            maxH = h\r\n          }\r\n          const extrudeSettings = {\r\n            depth: h,\r\n            bevelEnabled: false,\r\n          };\r\n          const shape = new THREE.Shape();\r\n          // 获取并计算xy坐标\r\n          let [ x, y ] = this.calculationCoordinate(item.geometry.coordinates[0][0])\r\n          // let [ x,y ] = item.geometry.coordinates[0][0]\r\n          // 移动到初始坐标\r\n          shape.moveTo( x , y);\r\n          item.geometry.coordinates[0].forEach((point) => {\r\n            [ x, y ] = this.calculationCoordinate(point)\r\n            // [ x, y ] = point\r\n            // 连接后续坐标\r\n            shape.lineTo(x , y);\r\n          });\r\n          // 将平面图形拉伸为3D图形\r\n          const geometry = new THREE.ExtrudeGeometry(shape, extrudeSettings);\r\n          //添加数据组\r\n          geometrys.push(geometry);\r\n        }\r\n      });\r\n      // 将所有建筑合并为一个Geometries\r\n      const geometry = mergeBufferGeometries(geometrys);\r\n      this.material = new THREE.ShaderMaterial({\r\n            uniforms:{\r\n                // outside: {\r\n                //     value: outside\r\n                // },\r\n                center: {\r\n                  value: this.cityCenter\r\n                },\r\n                maxH: {\r\n                  value: parseFloat(maxH)\r\n                }\r\n            },\r\n            vertexShader: `\r\n              varying vec3 vNormal;\r\n              varying vec3 vPosition;\r\n              varying vec2 vUv;\r\n              uniform vec2 center;\r\n              void main() {\r\n                //将attributes的normal通过varying赋值给了向量vNormal\r\n                vNormal = normal;\r\n                // vPosition = vec3((position.x - center.x) * 50000.0, -( position.y - center.y ) * 50000.0, position.z );\r\n                vPosition = position;\r\n                vUv = uv;\r\n                //projectionMatrix是投影变换矩阵 modelViewMatrix是相机坐标系的变换矩阵\r\n                gl_Position = projectionMatrix * modelViewMatrix * vec4( vPosition.x, vPosition.y, vPosition.z  , 1.0 );\r\n              }\r\n            `,\r\n            fragmentShader: `\r\n              // uniform sampler2D outside;\r\n              varying vec3 vNormal;\r\n              varying vec3 vPosition;\r\n              varying vec2 vUv;\r\n              uniform float maxH;\r\n              void main() {\r\n                float cy = (fract((vPosition.z - maxH) / maxH) + 0.7) * 0.7;\r\n                // 判断是否是顶面，是的话就纯色，不是的话就贴图\r\n                  float yu = mod( vPosition.z, 4.0 );\r\n                  if(yu<0.5){\r\n                    gl_FragColor = vec4(0.2, 0.2, 0.2, 1.0);\r\n                  } else {\r\n                    gl_FragColor = vec4(cy, cy, cy, 1.0);\r\n                  }\r\n              }\r\n            `\r\n          })\r\n      \r\n      const mesh = new THREE.Mesh(geometry, this.material);\r\n      mesh.rotation.x = -Math.PI / 2;\r\n      // this.scene.add(mesh)\r\n      const object = new THREE.Group();\r\n      object.add(mesh);\r\n      // 添加扫光动画和线条\r\n      this.city = new CityClass(object,this.cityCenter);\r\n      group.add(this.city.group)\r\n      // this.scene.add(this.city.group);\r\n      const texture = new THREE.TextureLoader().load('/smart-taiyuan/static/point.png')\r\n      texture.wrapS = texture.wrapT = THREE.RepeatWrapping\r\n      const green = new MeshLineMaterial({ useMap: 1,  map: texture, linewidth: 10})\r\n      console.log(green);\r\n      const red = new MeshLineMaterial({ color: '#9F6718', linewidth: 10 })\r\n      const lines = new THREE.Object3D()\r\n      // 遍历街道\r\n      road.features.forEach(item => {\r\n        const { name } = item.properties\r\n        const points = []\r\n        item.geometry.coordinates.forEach(point=>{\r\n          const [ x, y ] = this.calculationCoordinate(point)\r\n          points.push(new THREE.Vector3(x,y,0))\r\n        })\r\n        \r\n        let curve = new THREE.CatmullRomCurve3(points)\r\n        const pointsList = curve.getPoints( 50 );\r\n        const geometry = new MeshLine()\r\n        geometry.setPoints(pointsList)\r\n        const line = new THREE.Mesh(geometry, (name?green:red))\r\n        lines.add(line)\r\n      })\r\n      lines.position.y = -5\r\n      lines.rotation.x = -Math.PI / 2;\r\n      this.scene.add(lines)\r\n      // group.add(lines)\r\n\r\n      const riversGeometry = []\r\n      rivers.features.forEach(item=>{\r\n         if (item.geometry && item?.geometry.type === \"Polygon\" && ( item.properties.natural === 'water' || item.properties.leisure === 'park' )) {\r\n           const shape = new THREE.Shape();\r\n            // 获取并计算xy坐标\r\n            let [ x, y ] = this.calculationCoordinate(item.geometry.coordinates[0][0])\r\n            // let [x,y] = item.geometry.coordinates[0][0]\r\n            // 移动到初始坐标\r\n            shape.moveTo( x , y);\r\n            item.geometry.coordinates[0].forEach((point) => {\r\n              [ x, y ] = this.calculationCoordinate(point)\r\n              // [x,y] = point\r\n              // 连接后续坐标\r\n              shape.lineTo(x , y);\r\n            });\r\n            // 将平面图形拉伸为3D图形\r\n            const geometry = new THREE.ShapeGeometry(shape);\r\n            riversGeometry.push(geometry)\r\n         }\r\n      })\r\n      const water = new Water(mergeBufferGeometries(riversGeometry), {\r\n        color:'#0527AF',\r\n        scale:10,\r\n        flowDirection:new THREE.Vector2(1,1),\r\n        textureWidth:1024,\r\n        textureHeight:1024,\r\n      })\r\n      water.rotation.x = -Math.PI / 2;\r\n      // this.scene.add(water)\r\n      group.add(water)\r\n      this.scene.add(group)\r\n      const bbox = new THREE.Box3().setFromObject(lines)\r\n      const { max, min } = bbox\r\n      const w = max.x - min.x\r\n      const h = max.z - min.z\r\n      const floorG = new THREE.PlaneGeometry(w, h, 20);\r\n      const floor = this.floor =  new THREE.Mesh(floorG, new THREE.MeshBasicMaterial({ color: '#cfcfcf', side: THREE.DoubleSide, transparent: true, opacity: 0.1 }))\r\n      floor.rotateX(-Math.PI / 2)\r\n      floor.position.y = -8\r\n      floor.scale.set(100,100,1)\r\n      this.scene.add(floor)\r\n      //添加无人机\r\n      new GLTFLoader().load('/smart-taiyuan/static/model/无人机/UAV.gltf', gltf => {\r\n        const { scene } = gltf\r\n        scene.position.set( 666,250,-202)\r\n        // console.log(scene);\r\n        this.mixer = new THREE.AnimationMixer(scene);\r\n        this.mixer.clipAction(gltf.animations[0]).play();\r\n        this.scene.add(scene)\r\n      })\r\n      this.isDown = true;\r\n\r\n    // 添加粒子效果\r\n    // this.points = new CreatRisePoint()\r\n    // this.points.add({position: new THREE.Vector3(0,100,0),minRadius: 80,maxRadius: 1000,height: 500, size: 10,color: '#0527AF',number: 1000 })\r\n    // this.scene.add(this.points.group)\r\n    this.addCircleAlarm()\r\n    // this.renderer.addEffect(points)\r\n\r\n      const light = new THREE.AmbientLight(0xadadad); // soft white light\r\n      this.scene.add(light);\r\n\r\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n      directionalLight.position.set(100, 100, 0);\r\n      this.scene.add(directionalLight);\r\n\r\n      this.renderer.gammaInput = true;\r\n      this.renderer.gammaOutput = true;\r\n      container.appendChild(this.renderer.domElement);\r\n      container.addEventListener('click',this.onMouseClick)\r\n    },\r\n    onMouseClick(event){\r\n      const mouse = new THREE.Vector2();\r\n      mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\r\n      mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\r\n      raycaster.setFromCamera( mouse, this.camera );\r\n      // const intersects = raycaster.intersectObjects( [this.floor] );\r\n      // console.log(intersects);\r\n    },\r\n    onDBlclick(){\r\n\r\n    },\r\n    animate() {\r\n      if (this.isDown) {\r\n        this.cObject.rotateZ(0.1)\r\n        requestAnimationFrame(this.animate);\r\n        TWEEN.update()\r\n        const delta = this.clock.getDelta();\r\n        if (this.city) {\r\n          this.city.animate(delta);\r\n        }\r\n        if(this.points){\r\n          this.points.animate(delta)\r\n        }\r\n        if (this.mixer) {\r\n          this.mixer.update(delta)\r\n          }\r\n        this.controls.update();\r\n        // this.createCone(new THREE.Vector3(0,0,0),1)\r\n        this.renderer.render(this.scene, this.camera);\r\n      }\r\n    },\r\n    calculationCoordinate([x,y]){\r\n      return [( x - this.cityCenter.x) * 50000 * this.shapeScaleSize, -(y - this.cityCenter.y) * 50000 * this.shapeScaleSize ]\r\n    },\r\n    addCircleAlarm(){\r\n      this.cObject = new THREE.Object3D()\r\n      const arcShapeDrn01 = new THREE.Shape();\r\n      arcShapeDrn01.moveTo( 310, 0 );\r\n\t\t\tarcShapeDrn01.lineTo( 320, 0 );\r\n\t\t\tarcShapeDrn01.absarc( 0, 0, 320, 0, Math.PI * 2/4/6*5, false );\r\n\t\t\tarcShapeDrn01.absarc( 0, 0, 310,Math.PI * 2/4/6*5,0, true );\r\n\t\t\tconst extrudeSettings = { depth: 300, bevelEnabled: false, bevelSegments: 9, steps: 2, bevelSize: 0, bevelThickness: 0,extrudeMaterial : 1 };\r\n      const geometry = new THREE.ExtrudeGeometry( arcShapeDrn01, extrudeSettings );\r\n\r\n      const txtu = new THREE.TextureLoader().load('/smart-taiyuan/static/wf.png')\r\n      txtu.wrapS = txtu.wrapT = THREE.ClampToEdgeWrapping; // CHANGED\r\n      txtu.offset.set( 0, 0.5 ); // CHANGED\r\n      txtu.repeat.set( 0.01, 0.01 ); // CHANGED\r\n      const material =new THREE.MeshBasicMaterial( { map: txtu, transparent: true,  opacity: 0.8 } )\r\n      const mesh = new THREE.Mesh( geometry,material );\r\n      for(let i = 1; i < 5; i++ ){\r\n        const nMesh = mesh.clone()\r\n        nMesh.rotateZ(Math.PI*2/4*i)\r\n        this.cObject.add(nMesh)\r\n      }\r\n      this.cObject.position.y = 300\r\n      this.cObject.rotateX(Math.PI / 2)\r\n      this.cObject.scale.set(0.2,0.2,0.2)\r\n      this.scene.add(this.cObject)\r\n    },\r\n    createCone(position, index) {\r\n    const coneImg = ['/smart-taiyuan/static/lightray_yellow.jpg','/smart-taiyuan/static/lightray.jpg']\r\n    const HEXAGON_RADIUS = 5\r\n    let texture = new THREE.TextureLoader().load(coneImg[index]),\r\n        material = new THREE.MeshBasicMaterial({\r\n            map: texture,\r\n            transparent: true,\r\n            depthTest: false,\r\n            side: THREE.DoubleSide,\r\n            blending: THREE.AdditiveBlending\r\n        }),\r\n        // height = Math.random() * 50,\r\n        height= 200,\r\n        geometry = new THREE.PlaneGeometry(HEXAGON_RADIUS * 2, height),\r\n        matrix1 = new THREE.Matrix4,\r\n        plane1 = new THREE.Mesh(geometry, material)\r\n    matrix1.makeRotationX(Math.PI / 2)\r\n    matrix1.setPosition(new THREE.Vector3(0, 0, height / -2))\r\n    geometry.applyMatrix(matrix1)\r\n    let plane2 = plane1.clone()\r\n    plane2.rotation.z = Math.PI / 2\r\n    plane1.add(plane2)\r\n    plane1.position.copy(position)\r\n    \r\n    plane1.rotation.x = Math.PI / 2\r\n    // plane1.lookAt(0, 0, 0)\r\n    this.scene.add(plane1)\r\n}\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n\r\n.three {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CityMap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CityMap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CityMap.vue?vue&type=template&id=6ce90de9&\"\nimport script from \"./CityMap.vue?vue&type=script&lang=js&\"\nexport * from \"./CityMap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CityMap.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('img',{attrs:{\"src\":'/smart-taiyuan/static/top.png'}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <img :src=\"'/smart-taiyuan/static/top.png'\">\r\n        <!-- <img src=\"/static/middle.png\" class=\"left-m\">\r\n        <img src=\"/static/middle.png\" class=\"right-m\">\r\n        <img src=\"/static/bottom.png\" class=\"left-b\">\r\n        <img src=\"/static/bottom.png\" class=\"left-b\" style=\"top: 650px\">\r\n        <img src=\"/static/r-bottom.png\" class=\"right-b\"> -->\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    \r\n}\r\n</script>\r\n<style scoped>\r\n.left-m{\r\n    position:absolute;\r\n    top: 70px;\r\n    left: 10px;\r\n    width: 400px;\r\n}\r\n.right-m{\r\n    position:absolute;\r\n    top: 70px;\r\n    right: 10px;\r\n    width: 400px;\r\n}\r\n.left-b{\r\n    position:absolute;\r\n    top: 400px;\r\n    left: 10px;\r\n    width: 400px;\r\n}\r\n\r\n.right-b{\r\n    position:absolute;\r\n    top: 380px;\r\n    right: 10px;\r\n    width: 400px;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./staticLayout.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./staticLayout.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./staticLayout.vue?vue&type=template&id=d0e28d9e&scoped=true&\"\nimport script from \"./staticLayout.vue?vue&type=script&lang=js&\"\nexport * from \"./staticLayout.vue?vue&type=script&lang=js&\"\nimport style0 from \"./staticLayout.vue?vue&type=style&index=0&id=d0e28d9e&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d0e28d9e\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <city-map></city-map>\n    <static-layout class=\"layout\"></static-layout>\n  </div>\n</template>\n\n<script>\nimport CityMap from './components/CityMap.vue';\nimport StaticLayout from './components/staticLayout.vue';\n\nexport default {\n  components: { CityMap, StaticLayout },\n  name: \"App\",\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  background-image: url('/smart-taiyuan/static/bg.jpg');\n}\n.layout{\n  position:absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=f5e5c21c&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./staticLayout.vue?vue&type=style&index=0&id=d0e28d9e&scoped=true&lang=css&\""],"sourceRoot":""}